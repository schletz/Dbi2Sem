// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>

using System;
using System.Collections.Generic;
using CsvHelper;
using System.Globalization;
using System.IO;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using System.Linq;

namespace SchneeDbGenerator
{
    public class SchneeContext : MultiDbContext
    {
        public SchneeContext(DbContextOptions options) : base(options)
        {
        }

        public virtual DbSet<Bundesland> Bundesland { get; set; } = default!;
        public virtual DbSet<Messstelle> Messstellen { get; set; } = default!;
        public virtual DbSet<Schneemessung> Schneemessung { get; set; } = default!;
        public virtual DbSet<Skigebiete> Skigebiete { get; set; } = default!;

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Schneemessung>().HasKey(s => new { s.Sm_Messstelle, s.Sm_DatumZeit });
            base.OnModelCreating(modelBuilder);
        }

        internal void Seed()
        {
            var bundeslaender = ReadCsv<Bundesland>("Bundesland.csv");
            Bundesland.AddRange(bundeslaender);
            SaveChanges();
            var skigebiete = ReadCsv<Skigebiete>("Skigebiete.csv");
            Skigebiete.AddRange(skigebiete);
            SaveChanges();
            var messtellen = ReadCsv<Messstelle>("Messstellen.csv");
            Messstellen.AddRange(messtellen);
            SaveChanges();
            var schneemessungen = ReadCsv<Schneemessung>("Schneemessung.csv");
            Schneemessung.AddRange(schneemessungen);
            SaveChanges();
        }
        private IList<T> ReadCsv<T>(string filename)
        {
            using var reader = new StreamReader(Path.Combine("csv", filename));
            using var csv = new CsvReader(reader, CultureInfo.InvariantCulture);
            return csv.GetRecords<T>().ToList();
        }
    }
}